{
  "id": "guide/i18n-common-merge",
  "title": "Merge translations into the application",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/aio/aio/content/guide/i18n-common-merge.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"merge-translations-into-the-application\" translation-result=\"on\">将翻译合并到应用程序中<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#merge-translations-into-the-application\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"merge-translations-into-the-application\">Merge translations into the application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#merge-translations-into-the-application\"><i class=\"material-icons\">link</i></a></h1>\n\n<a id=\"merge\"></a>\n<a id=\"merge-aot\"></a>\n<p translation-result=\"on\">要将完成的翻译合并到你的应用程序中，请使用 <a href=\"guide/glossary#command-line-interface-cli\" title=\"command-line interface (CLI) - Glossary | Angular\">Angular CLI</a> 为每个语言环境构建应用程序的可分发文件的副本。</p><p translation-origin=\"off\">To merge the completed translations into your application, use the <a href=\"guide/glossary#command-line-interface-cli\" title=\"command-line interface (CLI) - Glossary | Angular\">Angular CLI</a> to build a copy of the distributable files of your application for each locale.</p>\n\n<p translation-result=\"on\">构建过程会用翻译文本替换原始文本，并为应用程序的每个可分发副本设置 <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> 标记。它还会加载和注册语言环境数据。</p><p translation-origin=\"off\">The build process replaces the original text with translated text, and sets the <code><a href=\"api/core/LOCALE_ID\" class=\"code-anchor\">LOCALE_ID</a></code> token for each distributable copy of your application.\nIt also loads and registers the locale data.</p>\n\n<p translation-result=\"on\">合并翻译后，可使用“服务器的语言检测功能”或不同的子目录来提供应用程序的每个可分发副本。有关如何为应用程序的每个可分发副本搭建服务器的更多信息，请参阅<a href=\"guide/i18n-common-deploy\" title=\"Deploy multiple locales | Angular\">部署多个语言环境</a>。</p><p translation-origin=\"off\">After you merge the translations, serve each distributable copy of the application using server-side language detection or different subdirectories.\nFor more information about how to serve each distributable copy of the application, see <a href=\"guide/i18n-common-deploy\" title=\"Deploy multiple locales | Angular\">deploying multiple locales</a>.</p>\n\n<p translation-result=\"on\">构建过程使用<a href=\"guide/glossary#ahead-of-time-aot-compilation\" title=\"ahead-of-time (AOT) compilation - Glossary | Angular\">预先 (AOT) 编译</a> 来生成小型、快速、可立即运行的应用程序。对于 Angular 9 中的 Ivy，默认情况下，AOT 用于开发和生产构建，并且需要 AOT 来本地化组件模板。</p><p translation-origin=\"off\">The build process uses <a href=\"guide/glossary#ahead-of-time-aot-compilation\" title=\"ahead-of-time (AOT) compilation - Glossary | Angular\">ahead-of-time (AOT) compilation</a> to produce a small, fast, ready-to-run application.\nWith Ivy in Angular version 9, AOT is used by default for both development and production builds, and AOT is required to localize component templates.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">有关构建过程的详细说明，请参阅<a href=\"guide/build\" title=\"Building and serving Angular apps | Angular\">构建和启动 Angular 开发服务器</a>。此构建过程适用于 <code>.xlf</code> 格式或 Angular 理解的其他格式的翻译文件，例如 <code>.xtb</code> 。</p><p translation-origin=\"off\">For a detailed explanation of the build process, see <a href=\"guide/build\" title=\"Building and serving Angular apps | Angular\">Building and serving Angular apps</a>.\nThis build process works for translation files in the <code>.xlf</code> format or in another format that Angular understands, such as <code>.xtb</code>.</p>\n\n</div>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">使用 JIT 模式时，Ivy 不支持合并 i18n 翻译。如果你<a href=\"guide/ivy#opting-out-of-ivy-in-version-9\" title=\"Opting out of Ivy in version 9 - Angular Ivy | Angular\">禁用 Ivy</a> 并使用 JIT 模式，请转到[与 JIT 编译器合并][AngularV8GuideI18nMergeWithTheJitCompiler]。</p><p translation-origin=\"off\">Ivy does not support merging i18n translations when using JIT mode.\nIf you <a href=\"guide/ivy#opting-out-of-ivy-in-version-9\" title=\"Opting out of Ivy in version 9 - Angular Ivy | Angular\">disable Ivy</a> and are using JIT mode, navigate [merging with the JIT compiler][AngularV8GuideI18nMergeWithTheJitCompiler].</p>\n\n</div>\n<p translation-result=\"on\">要为每个语言环境单独构建应用程序的可分发副本，请在项目的工作区配置文件 <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> 中<a href=\"guide/i18n-common-merge#define-locales-in-the-build-configuration\" title=\"Define locales in the build configuration - Merge translations into the application | Angular\">在构建配置中定义语言环境</a>。</p><p translation-origin=\"off\">To build a separate distributable copy of the application for each locale, <a href=\"guide/i18n-common-merge#define-locales-in-the-build-configuration\" title=\"Define locales in the build configuration - Merge translations into the application | Angular\">define the locales in the build configuration</a> in the workspace configuration file <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> of your project.</p>\n\n<p translation-result=\"on\">此方法不需要为每个语言环境各执行一遍完整的应用程序构建，从而缩短了构建过程。</p><p translation-origin=\"off\">This method shortens the build process by removing the requirement to perform a full application build for each locale.</p>\n\n<p translation-result=\"on\">接下来，要<a href=\"guide/i18n-common-merge#generate-application-versions-for-each-locale\" title=\"Generate application versions for each locale - Merge translations into the application | Angular\">为每个语言环境生成子版本</a>，请使用 <code>angular.json</code> 中的 <code>\"localize\"</code> 选项。此外，如果要<a href=\"guide/i18n-common-merge#build-from-the-command-line\" title=\"Build from the command line - Merge translations into the application | Angular\">从命令行进行构建</a>，请使用带有 <code>--localize</code> 选项的 <a href=\"cli/build\" title=\"ng build | CLI | Angular\"><code>build</code></a> Angular CLI 命令。</p><p translation-origin=\"off\">Then, to <a href=\"guide/i18n-common-merge#generate-application-versions-for-each-locale\" title=\"Generate application versions for each locale - Merge translations into the application | Angular\">generate application versions for each locale</a>, use the <code>\"localize\"</code> option in <code>angular.json</code>.\nAlso, to <a href=\"guide/i18n-common-merge#build-from-the-command-line\" title=\"Build from the command line - Merge translations into the application | Angular\">build from the command line</a>, use the <a href=\"cli/build\" title=\"ng build | CLI | Angular\"><code>build</code></a> Angular CLI command with the <code>--localize</code> option.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">或者，<a href=\"guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\" title=\"Apply specific build options for just one locale - Merge translations into the application | Angular\">仅对一种语言环境应用特定的构建选项</a> 以便自定义语言环境配置。</p><p translation-origin=\"off\">Optionally, <a href=\"guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\" title=\"Apply specific build options for just one locale - Merge translations into the application | Angular\">apply specific build options for just one locale</a> for a custom locale configuration.</p>\n\n</div>\n<h3 id=\"define-locales-in-the-build-configuration\" translation-result=\"on\">在构建配置中定义语言环境<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#define-locales-in-the-build-configuration\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"define-locales-in-the-build-configuration\">Define locales in the build configuration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#define-locales-in-the-build-configuration\"><i class=\"material-icons\">link</i></a></h3>\n\n<a id=\"localize-config\"></a>\n<p translation-result=\"on\">使用应用程序的构建配置文件 (<a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a>) 中的 <code>i18n</code> 项目选项来定义项目的语言环境。</p><p translation-origin=\"off\">Use the <code>i18n</code> project option in the build configuration file (<a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a>) of your application to define locales for a project.</p>\n\n<p translation-result=\"on\">以下子选项标识源语言并告诉编译器在哪里可以找到项目支持的翻译文件：</p><p translation-origin=\"off\">The following sub-options identify the source language and tell the compiler where to find supported translations for the project:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>sourceLocale</code>：你在应用程序源代码中使用的语言环境（默认为 <code>en-US</code> ）</p><p translation-origin=\"off\"><code>sourceLocale</code>: The locale you use within the application source code (<code>en-US</code> by default)</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>locales</code> ：语言环境标识符到翻译文件的映射表</p><p translation-origin=\"off\"><code>locales</code>: A map of locale identifiers to translation files</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">例如，<code>angular.json</code> 文件中的下列片段会将源语言环境设置为 <code>en-US</code> 并提供 <code>fr</code> （法语）语言环境翻译文件的路径：</p><p translation-origin=\"off\">For example, the following excerpt of an <code>angular.json</code> file sets the source locale to <code>en-US</code> and provides the path to the <code>fr</code> (French) locale translation file:</p>\n\n<code-example language=\"json\" header=\"angular.json\" path=\"i18n/angular.json\" region=\"locale-config\">\n  \"projects\": {\n    \"angular.io-example\": {\n      // ...\n      \"i18n\": {\n        \"sourceLocale\": \"en-US\",\n        \"locales\": {\n          \"fr\": \"src/locale/messages.fr.xlf\",\n          // ...\n        }\n      },\n      \"architect\": {\n        // ...\n      }\n    }\n  },\n  \"defaultProject\": \"angular.io-example\"\n}\n\n</code-example>\n<h3 id=\"generate-application-versions-for-each-locale\" translation-result=\"on\">为每个语言环境生成应用程序子版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#generate-application-versions-for-each-locale\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"generate-application-versions-for-each-locale\">Generate application versions for each locale<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#generate-application-versions-for-each-locale\"><i class=\"material-icons\">link</i></a></h3>\n\n<a id=\"localize-generate\"></a>\n<p translation-result=\"on\">要在构建配置中使用你的语言环境定义，请使用 <code>angular.json</code> 中的 <code>\"localize\"</code> 选项告诉 CLI 为构建配置生成哪些语言环境：</p><p translation-origin=\"off\">To use your locale definition in the build configuration, use the <code>\"localize\"</code> option in <code>angular.json</code> to tell the CLI which locales to generate for the build configuration:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">将 <code>\"localize\"</code> 设置为 <code>true</code>，来构建先前在构建配置中定义的<em>所有</em>语言环境。</p><p translation-origin=\"off\">Set <code>\"localize\"</code> to <code>true</code> for <em>all</em> the locales previously defined in the build configuration.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">将 <code>\"localize\"</code> 设置为先前定义的语言环境标识符子集的数组，来单独构建那些语言环境版本。</p><p translation-origin=\"off\">Set <code>\"localize\"</code> to an array of a subset of the previously defined locale identifiers to build only those locale versions.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">将 <code>\"localize\"</code> 设置为 <code>false</code>，来禁用本地化并且不生成任何特定于语言环境的版本。</p><p translation-origin=\"off\">Set <code>\"localize\"</code> to <code>false</code> to disable localization and not generate any locale-specific versions.</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\"><strong>注意</strong>：本地化组件模板需要<a href=\"guide/glossary#ahead-of-time-aot-compilation\" title=\"ahead-of-time (AOT) compilation - Glossary | Angular\">预先 (AOT) 编译</a>。</p><p translation-origin=\"off\"><strong>NOTE</strong>: <a href=\"guide/glossary#ahead-of-time-aot-compilation\" title=\"ahead-of-time (AOT) compilation - Glossary | Angular\">Ahead-of-time (AOT) compilation</a> is required to localize component templates.</p>\n\n<p translation-result=\"on\">如果你更改了此设置，请将 <code>\"aot\"</code> 设置为 <code>true</code> 以使用 AOT。</p><p translation-origin=\"off\">If you changed this setting, set <code>\"aot\"</code> to <code>true</code> in order to use AOT.</p>\n\n</div>\n<p translation-result=\"on\">以下示例展示在 <code>angular.json</code> 中的 <code>\"localize\"</code> 选项设置为 <code>true</code>，以便构建 <code>build</code> 配置中定义的所有语言环境。</p><p translation-origin=\"off\">The following example displays the <code>\"localize\"</code> option set to <code>true</code> in <code>angular.json</code>, so that all locales defined in the build configuration are built.</p>\n\n<code-example language=\"json\" header=\"angular.json\" path=\"i18n/angular.json\" region=\"build-localize-true\">\n\"build\": {\n  \"builder\": \"@angular-devkit/build-angular:browser\",\n  \"options\": {\n    \"localize\": true,\n    // ...\n  },\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">由于 i18n 部署的复杂性和最小化重建时间的需要，开发服务器只支持每次本地化一个语言环境。如果你将 <code>\"localize\"</code> 选项设置为 <code>true</code>，请定义多个语言环境，并使用 <code>ng serve</code>，就会发生错误。如果要针对特定语言环境进行开发，请将 <code>\"localize\"</code> 选项设置为特定语言环境。<br>\n例如，对于法语 ( <code>fr</code> )，请指定 <code>\"localize\": [\"fr\"]</code> 。</p><p translation-origin=\"off\">Due to the deployment complexities of i18n and the need to minimize rebuild time, the development server only supports localizing a single locale at a time.\nIf you set the <code>\"localize\"</code> option to <code>true</code>, define more than one locale, and use <code>ng serve</code>; then an error occurs.\nIf you want to develop against a specific locale, set the <code>\"localize\"</code> option to a specific locale.<br>\nFor example, for French (<code>fr</code>), specify <code>\"localize\": [\"fr\"]</code>.</p>\n\n</div>\n<p translation-result=\"on\">CLI 会加载并注册语言环境数据，将每个生成的版本放置在语言环境的专属目录中，以便把它和其他语言环境版本分开，并将目录放在为本项目配置的 <code>outputPath</code> 中。对于应用程序的每个变体，其 <code>html</code> 元素的 <code>lang</code> 属性设置为语言环境。CLI 还会将语言环境添加到配置的 <code>baseHref</code> 中，以调整每个应用程序版本的 HTML base HREF。</p><p translation-origin=\"off\">The CLI loads and registers the locale data, places each generated version in a locale-specific directory to keep it separate from other locale versions, and puts the directories within the configured <code>outputPath</code> for the project.\nFor each application variant the <code>lang</code> attribute of the <code>html</code> element is set to the locale.\nThe CLI also adjusts the HTML base HREF for each version of the application by adding the locale to the configured <code>baseHref</code>.</p>\n\n<p translation-result=\"on\">将 <code>\"localize\"</code> 属性设置为共享配置，以便让所有配置有效的继承它。此外，设置该属性会覆盖其他配置。</p><p translation-origin=\"off\">Set the <code>\"localize\"</code> property as a shared configuration to effectively inherit for all the configurations.\nAlso, set the property to override other configurations.</p>\n\n<h3 id=\"build-from-the-command-line\" translation-result=\"on\">从命令行构建<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#build-from-the-command-line\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"build-from-the-command-line\">Build from the command line<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#build-from-the-command-line\"><i class=\"material-icons\">link</i></a></h3>\n\n<a id=\"localize-build-command\"></a>\n<p translation-result=\"on\">此外，将 <code>--localize</code> 选项与 <a href=\"cli/build\" title=\"ng build | CLI | Angular\"> <code>ng build</code> </a> 命令和你现有的 <code>production</code> 配置结合使用。CLI 会构建 <code>build</code> 配置中定义的所有语言环境。如果要在 <code>build</code> 配置中设置语言环境，则同样把 <code>\"localize\"</code> 选项设置为 <code>true</code>。有关如何设置语言环境的更多信息，请参阅<a href=\"guide/i18n-common-merge#generate-application-versions-for-each-locale\" title=\"Generate application versions for each locale - Merge translations into the application | Angular\">为每个语言环境生成应用程序版本</a>。</p><p translation-origin=\"off\">Also, use the <code>--localize</code> option with the <a href=\"cli/build\" title=\"ng build | CLI | Angular\"><code>ng build</code></a> command and your existing <code>production</code> configuration.\nThe CLI builds all locales defined in the build configuration.\nIf you set the locales in build configuration, it is similar to when you set the <code>\"localize\"</code> option to <code>true</code>.\nFor more information about how to set the locales, see <a href=\"guide/i18n-common-merge#generate-application-versions-for-each-locale\" title=\"Generate application versions for each locale - Merge translations into the application | Angular\">Generate application versions for each locale</a>.</p>\n\n<code-example path=\"i18n/doc-files/commands.sh\" region=\"build-localize\" language=\"sh\">\nng build --localize\n\n</code-example>\n<h3 id=\"apply-specific-build-options-for-just-one-locale\" translation-result=\"on\">仅对一种语言环境应用特定的 <code>build</code> 选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"apply-specific-build-options-for-just-one-locale\">Apply specific build options for just one locale<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\"><i class=\"material-icons\">link</i></a></h3>\n\n<a id=\"localize-build-one-locale\"></a>\n<p translation-result=\"on\">要让特定的构建选项仅应用于一种语言环境，请指定单个语言环境以创建自定义语言环境的专用配置。以下示例展示了使用单个语言环境的自定义语言环境的专用配置。</p><p translation-origin=\"off\">To apply specific build options to only one locale, specify a single locale to create a custom locale-specific configuration.\nThe following example displays a custom locale-specific configuration using a single locale.</p>\n\n<code-example language=\"json\" header=\"angular.json\" path=\"i18n/angular.json\" region=\"build-single-locale\">\n  \"build\": {\n    // ...\n    \"configurations\": {\n      // ...\n      \"fr\": {\n        \"localize\": [\n          \"fr\"\n        ]\n      }\n    },\n    // ...\n  },\n  \"serve\": {\n    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n    \"configurations\": {\n      // ...\n      \"fr\": {\n        \"browserTarget\": \"angular.io-example:build:fr\"\n      }\n    },\n    // ...\n  },\n  // ...\n}\n\n</code-example>\n<p translation-result=\"on\">将此配置传递给 <code>ng serve</code> 或 <code>ng build</code> 命令。以下代码示例展示了如何提供法语文件。</p><p translation-origin=\"off\">Pass this configuration to the <code>ng serve</code> or <code>ng build</code> commands.\nThe following code example displays how to serve the French language file.</p>\n\n<code-example path=\"i18n/doc-files/commands.sh\" region=\"serve-french\" language=\"sh\">\nng serve --configuration=fr\n\n</code-example>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">使用只有一个语言环境的 CLI 开发服务器 ( <code>ng serve</code> )。</p><p translation-origin=\"off\">Use the CLI development server (<code>ng serve</code>) with only a single locale.</p>\n\n</div>\n<p translation-result=\"on\">对于生产构建，可以使用配置组合来运行这两种配置。</p><p translation-origin=\"off\">For production builds, use configuration composition to run both configurations.</p>\n\n<code-example path=\"i18n/doc-files/commands.sh\" region=\"build-production-french\" language=\"sh\">\nng build --configuration=production,fr\n\n</code-example>\n<code-example language=\"json\" header=\"angular.json\" path=\"i18n/angular.json\" region=\"build-production-french\">\n\"architect\": {\n  \"build\": {\n    \"builder\": \"@angular-devkit/build-angular:browser\",\n    \"options\": {\n      // ...\n    },\n    \"configurations\": {\n      // ...\n      \"fr\": {\n        \"localize\": [\n          \"fr\"\n        ]\n      }\n    },\n    // ...\n  },\n  \"serve\": {\n    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n    \"configurations\": {\n      \"production\": {\n        \"browserTarget\": \"angular.io-example:build:production\"\n      },\n      // ...\n      \"fr\": {\n        \"browserTarget\": \"angular.io-example:build:fr\"\n      }\n    },\n    // ...\n  },\n  // ...\n}\n\n</code-example>\n<h3 id=\"report-missing-translations\" translation-result=\"on\">报告缺失的翻译<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#report-missing-translations\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"report-missing-translations\">Report missing translations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#report-missing-translations\"><i class=\"material-icons\">link</i></a></h3>\n\n<a id=\"missing-translation\"></a>\n<p translation-result=\"on\">当缺少翻译时，能构建成功但会生成警告，例如 <code>Missing translation for message \"{translation_text}\"</code> 。要配置 Angular 编译器生成的警告级别，请指定以下级别之一。</p><p translation-origin=\"off\">When a translation is missing, the build succeeds but generates a warning such as <code>Missing translation for message \"{translation_text}\"</code>.\nTo configure the level of warning that is generated by the Angular compiler, specify one of the following levels.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>error</code> ：抛出错误。如果你使用 AOT 编译，则构建将失败。如果你使用 JIT 编译，应用程序将无法加载。</p><p translation-origin=\"off\"><code>error</code>: Throw an error.\nIf you are using AOT compilation, the build will fail.\nIf you are using JIT compilation, the application will fail to load.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>warning</code> （默认）：在控制台或 shell 中显示 <code>Missing translation</code> 警告。</p><p translation-origin=\"off\"><code>warning</code> (default): Displays a <code>Missing translation</code> warning in the console or shell.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>ignore</code> ：什么都不做。</p><p translation-origin=\"off\"><code>ignore</code>: Do nothing.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">在 Angular CLI 配置文件 ( <code>angular.json</code> ) 的 <code>build</code> 目标的 <code>options</code> 部分指定警告级别。以下示例展示如何将警告级别设置为 <code>error</code> 。</p><p translation-origin=\"off\">Specify the warning level in the <code>options</code> section for the <code>build</code> target of your Angular CLI configuration file (<code>angular.json</code>).\nThe following example displays how to set the warning level to <code>error</code>.</p>\n\n<code-example language=\"json\" header=\"angular.json\" path=\"i18n/angular.json\" region=\"missing-translation-error\">\n\"build\": {\n  \"builder\": \"@angular-devkit/build-angular:browser\",\n  \"options\": {\n    // ...\n    \"i18nMissingTranslation\": \"error\"\n  },\n\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!--[AngularV8GuideI18nMergeWithTheJitCompiler]: https://v8.angular.io/guide/i18n-common#merge-translations-into-the-app-with-the-jit-compiler \"Merge with the JIT compiler - Internationalization (i18n) | Angular v8\" -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间： 2021/9/15</div>\n</div>\n\n\n<!-- links to this doc:\n - api/core/MissingTranslationStrategy\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - guide/deprecations\n - guide/i18n-common\n - guide/i18n-common-locale-id\n - guide/ivy\n - guide/workspace-config\n-->\n<!-- links from this doc:\n - api/core/LOCALE_ID\n - cli/build\n - guide/build\n - guide/glossary#ahead-of-time-aot-compilation\n - guide/glossary#command-line-interface-cli\n - guide/i18n-common-deploy\n - guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\n - guide/i18n-common-merge#build-from-the-command-line\n - guide/i18n-common-merge#define-locales-in-the-build-configuration\n - guide/i18n-common-merge#generate-application-versions-for-each-locale\n - guide/i18n-common-merge#merge-translations-into-the-application\n - guide/i18n-common-merge#report-missing-translations\n - guide/ivy#opting-out-of-ivy-in-version-9\n - guide/workspace-config\n - https://github.com/ng-docs/angular-cn/edit/aio/aio/content/guide/i18n-common-merge.md?message=docs%3A%20请简述你的修改...\n-->"
}